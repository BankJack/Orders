<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<!-- 编写sql语句的配置文件，对应mapper接口 -->
<mapper namespace="com.hxzy.mapper.OrdersMapper">
	<resultMap type="orders" id="queryAllResultMap">
		<!-- 指定数据库中唯一标示列 -->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		
		<!-- 
		property：orders类中的user属性
		javaType:要关联的对象的java类型
		
		columnPrefix:多张表进行连接查询时，如果有多个不同的列具有同名时，并且该重名的列的含义是不同的，
					此时，为了解决列名重复的问题，我们可以通过为列指定别名。
					通过columnPrefix为列名指定统一的前缀，mybatis在映射列名时，会根据前缀自动的分类。
		 -->
		<association property="user" javaType="user" columnPrefix="u_">
			<!-- 
				id节点中的property：user类中的主键属性
				column：orders表中的user外键。orders表中有个user_id的外键。
			 -->
			<id  column="id" property="id" />
			<result column="username" property="userName"/>
			<result column="birthday" property="birthday"/>
			<result column="sex" property="sex"/>
			<result column="address" property="address"/>
		</association>
	</resultMap>
	
	<select id="queryAll" resultMap="queryAllResultMap">
		select 
			o.id,
			o.user_id,
			o.number,
			o.createtime,
			o.note,
			u.id u_id,
			u.username u_username,
			u.birthday u_birthday,
			u.sex u_sex,
			u.address u_address
		from `orders` o
		inner join `user` u
		on o.user_id = u.id
	</select>
</mapper>